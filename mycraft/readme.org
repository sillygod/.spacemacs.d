* Configurations

  A literal programming for my own emacs configs.

* Start to build my own emacs

  Wow almost complete :)

** things needed to be done or enahnced

   - [ ] [[https://github.com/syl20bnr/spacemacs/blob/develop/layers/%2Bmisc/multiple-cursors/packages.el][integration for multiple cursor from spacemacs]]
   - [ ] add run test and intergrate them into which-key bindings
   - [ ] add rename file function
   - [ ] add google dictionary function
   - [ ] diminish persp workspace in the modeline
   - [ ] fullscreen mode (shorcut)
   - [ ] adopt darkroom package?

** program relavant config

   - [ ] emacs-lisp, lisp configuration (lispy?)
   - [ ] ssh remote better ux https://github.com/jixiuf/vterm-toggle
   - [ ] k8s editor mode https://github.com/TxGVNN/emacs-k8s-mode/blob/master/k8s-mode.el
   - [ ] manage this config by literate programming way

** better to have

   - [ ] a startup dashboard
   - [ ] interactive sql mode
   - [ ] spacemacs' org-doc-view mode?
   - [ ] https://github.com/quelpa/quelpa need this?
   - [ ] window management https://github.com/hlissner/doom-emacs/tree/develop/modules/ui/popup

** some questions

   - [X] to understand the source code of some implementation from =spacemacs=
   - [X] what does the =command= in the use-package do (make the command to be autoloaded)
   - [X] what is =featurep=


  #+begin_src bash
    emacs -Q --load init.el
  #+end_src

  reference: https://www.youtube.com/watch?v=xaZMwNELaJY

** use =esup= to profiling the emacs start up time

** use =what-cursor-position= to see the detail font-face under the cursor
   run this with universal args can get a more detail info.

** toggle-debug-on-error help to debug

** transient-state seems to be spaceamcs's own implementation

   [[https://github.com/syl20bnr/spacemacs/blob/c7a103a772d808101d7635ec10f292ab9202d9ee/layers/%2Bspacemacs/spacemacs-completion/packages.el#L137][source code link]]

** helpful

   #+begin_quote
   you can search for Emacs functions within Emacs by typing M-x apropos, then typing your query. In this case, M-x apropos <RET> whitespace <RET> provides a list of functions relating to whitespace.
   #+end_quote

*** introspec the keybinding in the emacs
    https://emacs.stackexchange.com/questions/653/how-can-i-find-out-in-which-keymap-a-key-is-bound

** evil-collection

   Oh~ We can overwrite the original keymap by changing the kemap of the mode

   ex.
   #+begin_src elisp
     (setcdr
        (assq 'lispy-mode minor-mode-map-alist)
        lispy-mode-map)
   #+end_src

* Reference

   - http://ergoemacs.org/emacs/emacs.html
   - https://github.com/daviwil/dotfiles
   - https://github.com/lccambiaghi/.doom.d
   - https://github.com/jschaf/dotfiles/blob/master/emacs/start.el
   - https://github.com/raxod502/radian/tree/develop/emacs
   - https://github.com/daipeihust/im-select (combine this with evil mode)
   - https://github.com/clemera/objed (interesting..)
